
services:
  api-gateway:
    build:
      context: ./GatewayAPI
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./GatewayAPI:/app
      - /app/bin
      - /app/obj
    depends_on:
      - job-service
      - identity-service
    networks:
      - app-network
    working_dir: /app
    command: >
      sh -c "dotnet watch run --urls=http://0.0.0.0:8080"
    expose:
      - "8080"

  job-service:
    build:
      context: ./Services/JobService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./Services/JobService:/app
      - /app/bin
      - /app/obj
    depends_on:
      - job_db
    networks:
      - app-network
    working_dir: /app
    command: >
      sh -c "dotnet ef database update &&
             dotnet watch run --urls=http://0.0.0.0:8081"
    expose:
      - "8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  identity-service:
    build:
      context: ./Services/IdentityService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - NODE_ENV=development
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./Services/IdentityService:/app
      - /app/bin
      - /app/obj
    depends_on:
      - identity_db
    networks:
      - app-network
    working_dir: /app
    command: >
      sh -c "dotnet ef database update &&
             dotnet watch run --urls=http://0.0.0.0:8082"
    expose:
      - "8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  job_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: job_db
    ports:
      - "5432:5432"
    volumes:
      - job_db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  identity_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: identity_db
    ports:
      - "6303:5432"
    volumes:
      - identity_db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  job_db_data:
  identity_db_data:

networks:
  app-network: