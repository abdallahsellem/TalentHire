
services:
  backend:
    build:
      context: ./TalentHire
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./TalentHire:/app
      - /app/bin
      - /app/obj
    depends_on:
      - db
    networks:
      - app-network
    working_dir: /app
    command: >
      sh -c "dotnet ef database update &&
             dotnet watch run --urls=http://0.0.0.0:8080"
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: talenthire
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_data:

networks:
  app-network: